@using Logement.ViewModels;

@model RegisterViewModel;
@{
    ViewData["Title"] = "Create Account";
    Layout = "~/Views/Account/_AuthLayout.cshtml";
}

<style>
    form > * {
        margin: 1em auto;
    }

    .search-box {
        display: none;
    }

    .body {
        margin-top: 100px;
        margin-left: 50px;
        margin-right: 50px;
    }
</style>

<section class="body">

    @using (Html.BeginForm("Register", "Account", FormMethod.Post))
    {
        <h2>Create a new account.</h2>
        <hr />
        <div asp-validation-summary="ModelOnly" class="text-danger" role="alert"></div>

        <div class="row">
            <div class="col-6">
                <div class="form-floating mb-3">
                    <input asp-for="FirstName" class="form-control" autocomplete="firstname" aria-required="true" placeholder="first name" />
                    <label asp-for="FirstName">First Name</label>
                </div>
            </div>
            <div class="col-6">
                <div class="form-floating mb-3">
                    <input asp-for="LastName" class="form-control" autocomplete="lastname" aria-required="true" placeholder="last name" />
                    <label asp-for="LastName">Last Name</label>
                </div>
            </div>
        </div>
        <div>
            <div>@Html.TextBoxFor(m => m.JobTitle, new { @class = "form-control", @placeholder = "Your job" })</div>
            <div>@Html.ValidationMessageFor(m => m.JobTitle, "", new { @class = "text-danger" })</div>
        </div>
 
        <div>
            <div>@Html.TextBoxFor(m => m.Email, new { @class = "form-control", @placeholder = "Email" })</div>
            <div>@Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })</div>
        </div>

        <div>
            <div>@Html.TextBoxFor(m => m.PhoneNumber, new { @class = "form-control",@id ="Phone", @placeholder = "Phone number with country code" })</div>
            <div>@Html.ValidationMessageFor(m => m.PhoneNumber, "", new { @class = "text-danger" })</div>
        </div>

        <div>
            <div>@Html.TextBoxFor(m => m.Password, new { @class = "form-control", @placeholder = "Password", @type = "password" })</div>
            <div>@Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })</div>
        </div>

        <div>
            <div>@Html.TextBoxFor(m => m.ConfirmPassword, new { @class = "form-control", @placeholder = "Confirm password", @type = "password" })</div>
            <div>@Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })</div>
        </div>

        <button id="registerSubmit" type="submit" class="w-100 btn btn-lg btn-primary">Register</button>
    }
</section>


<script src="/js/intlTelInput.js"></script>
<script>
    var input = document.querySelector("#Phone");
    window.intlTelInput(input,{});
</script>
<p>
    <a href="https://localhost:44328/">Return to Home Page</a>
</p>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}