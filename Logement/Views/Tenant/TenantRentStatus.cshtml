@model IEnumerable<Logement.ViewModels.RentPaymentDatesSchedularViewModel>

@{
    ViewData["Title"] = "AllTenantRentStatus";
    City? cityOwner = (City)ViewData["cityOwner"];
    var rentStatus = (RentPaymentDatesSchedular)ViewData["rentStatus"]; 
}

<style>
    .body {
        margin-top: 100px;
        margin-left: 50px;
        margin-right: 50px;
    }

    .table {
        margin-top: 50px;
    }

    .btn-pay {
        background-color: #007bff;
        color: #fff;
    }

    .btn-pay-now {
        background-color: #28a745;
        color: #fff;
    }
</style>

<section class="body">
    @if (!Model.Any())
    {
        <div class="alert alert-info" role="alert">
            <div class="good-news-message">
                <strong>Good news!</strong> You have no rent to pay at the moment.
            </div>
            <div class="next-payment-message" style="margin-top: 10px;">
                <strong>Next rent payment date: </strong><span class="next-payment-date" style="color: #ff6600; font-size: 24px;">@String.Format("{0:dddd, MMMM d, yyyy}", @rentStatus.NextDateToPay)</span>
            </div>
            <div class="amount-to-pay-message" style="margin-top: 10px;">
                <strong>Amount to pay:</strong>
                
                <span class="amount-to-pay" style="color: #3366cc; font-size: 24px;">
                    @string.Format("{0:n0}", rentStatus.AmountAlreadyPaid > 0 ? (rentStatus.AmmountSupposedToPay - rentStatus.AmountAlreadyPaid) : rentStatus.AmmountSupposedToPay) FCFA
                </span>

            </div>
        </div>
    }
    else
    {
        <h3 style="margin-top:10px;">Rent status</h3>

        <table class="table">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.ApartmentNumber)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.TenantFullName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.AmmountSupposedToPay)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.AmountAlreadyPaid)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.RemainingAmount)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.ExpectedDateToPay)
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.ApartmentNumber)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.TenantFullName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.AmmountSupposedToPay)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.AmountAlreadyPaid)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.RemainingAmount)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.ExpectedDateToPay)
                        </td>
                        <td>
                            @if(cityOwner != null)
                            {
                                <button type="button" class="btn btn-primary btn-pay" data-toggle="modal" data-target="#payModal-@item.Id">
                                    Pay
                                </button>
                            }
                            <!-- Modal -->
                            <div class="modal fade" id="payModal-@item.Id" tabindex="-1" role="dialog" aria-labelledby="payModalLabel-@item.Id" aria-hidden="true">
                                <div class="modal-dialog" role="document">
                                    <div class="modal-content">
                                        <div class="modal-header">
                                            <h5 class="modal-title" id="payModalLabel-@item.Id">Pay Rent</h5>
                                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                                <span aria-hidden="true">&times;</span>
                                            </button>
                                        </div>
                                        <div class="modal-body">
                                            <h6>Amount to be paid: <strong>@item.RemainingAmount FCFA</strong></h6>
                                            <form id="payForm-@item.Id">
                                                <div class="form-group">
                                                    <input type="number" class="form-control" id="amountInput-@item.Id" placeholder="Enter amount" required oninput="validateAmount(this.value, @item.RemainingAmount, 'payNowButton-@item.Id')">
                                                </div>
                                            </form>
                                        </div>
                                        <div class="modal-footer">
                                            <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                                            <button type="button" class="btn btn-primary btn-pay-now" id="payNowButton-@item.Id" onclick="payRent(@item.TenantId, @item.Id)" disabled>Pay now</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
</section>

<script src="https://code.jquery.com/jquery-3.6.0.min.js" crossorigin="anonymous"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js" crossorigin="anonymous"></script>

<script>
    function payRent(tenantId, rentId) {
        var amountInput = document.getElementById("amountInput-" + rentId);
        var amount = amountInput.value;

        // Prepare the request data
        var data = {
            tenantId: tenantId,
            rentId: rentId,
            amount: amount
        };

        // Send a POST request to the PayRent endpoint
        $.ajax({
            url: "/Tenant/PayRent",
            type: "POST",
            data: data,
            success: function (response) {
                var successMessage = "Payment successful!";
                alert(successMessage);
                location.reload(); // Reload the page
            },
            error: function (xhr, status, error) {
                var errorMessage = "Payment failed. Please try again.";
                alert(errorMessage);
                console.error("Payment failed:", error);
            }
        });
    }

    function validateAmount(enteredAmount, remainingAmount, buttonId) {
        var payNowButton = document.getElementById(buttonId);
        var payAmount = parseFloat(enteredAmount);
        var remainingAmount = parseFloat(remainingAmount);

        var amountMessage = document.getElementById("amountMessage-" + buttonId);

        if (payAmount >= 5000 && payAmount <= remainingAmount) {
            payNowButton.disabled = false; // Enable the button
        } else {
            payNowButton.disabled = true; // Disable the button
        }
    }
</script>

