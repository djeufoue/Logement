@model Logement.ViewModels.ApartmentBaseInfos

@{
    ViewData["Title"] = "Apartment Details";

    // Temporary sample data for Members and Tenancies
    var members = new List<string> { "Member 1", "Member 2", "Member 3", "Member 4", "Member 5", "Member 6" };
    var tenancies = new List<string> { "Tenant A", "Tenant B", "Tenant C", "Tenant D", "Tenant E", "Tenant F" };
}

<link rel="stylesheet" href="~/css/site-common.css">

<div class="page-container">
    <!-- Main Left Section -->
    <div class="main-content">
        <section class="content-header">
            <h1>Apartment Details</h1>
        </section>

        <div class="apartment-info">
            <h3>Apartment Number: @Model.ApartmentInfos.Id</h3>
            <div class="details-grid">
                <div>
                    <p><strong>City Name:</strong><br />@Model.ApartmentInfos.CityName</p>
                    <p><strong>Located at:</strong><br />@Model.ApartmentInfos.LocatedAt</p>
                    <p><strong>Number of Rooms:</strong><br />@Model.ApartmentInfos.NumberOfRooms</p>
                    <p><strong>Room Area:</strong><br />@Model.ApartmentInfos.RoomArea</p>
                </div>
                <div>
                    <p><strong>Number of Bathrooms:</strong><br />@Model.ApartmentInfos.NumberOfbathRooms</p>
                    <p><strong>Floor Number:</strong><br />@Model.ApartmentInfos.FloorNumber</p>
                    <p><strong>Price:</strong><br />@Model.ApartmentInfos.Price</p>
                </div>
            </div>
        </div>

        <div class="image-container">
            @foreach (var image in Model.ApartmentImages)
            {
                <div class="image-card">
                    <img src="data:@image.ContentType;base64,@Convert.ToBase64String(image.Data)" alt="Apartment Image" />
                </div>
            }
        </div>
    </div>

    <!-- Sidebar Section -->
    <div class="sidebar">
        <!-- Members Accordion -->
        <div class="card">
            <h4 class="accordion-header" onclick="toggleAccordion(this)">
                Members
                <button class="add-button" onclick="event.stopPropagation(); openModal('member')">+ Add</button>
            </h4>
            <ul class="@(members.Count >= 8 ? "scrollable" : "")">
                @foreach (var member in members)
                {
                    <li>@member</li>
                }
            </ul>
        </div>

        <!-- Tenancies Accordion -->
        <div class="card">
            <h4 class="accordion-header" onclick="toggleAccordion(this)">
                Tenancies
                <button class="add-button" onclick="event.stopPropagation(); openModal('tenancy')">+ Add</button>
            </h4>
            <ul class="@(tenancies.Count >= 8 ? "scrollable" : "")">
                @foreach (var tenant in tenancies)
                {
                    <li>@tenant</li>
                }
            </ul>
        </div>
    </div>
</div>

<!-- Modal -->
<div id="addModal" class="modal-overlay" style="display:none;">
    <div class="modal-content">
        <h3 id="modalTitle">Add Item</h3>
        <input type="text" id="modalInput" placeholder="Enter name..." />
        <div class="modal-actions">
            <button onclick="submitModal()">Submit</button>
            <button onclick="closeModal()">Cancel</button>
        </div>
    </div>
</div>

<script>
    let currentType = ''; // "member" or "tenancy"

    // Toggle the accordion open/close
    function toggleAccordion(header) {
        header.classList.toggle("active");
        const list = header.nextElementSibling;
        if (list.style.maxHeight && list.style.maxHeight !== "0px") {
            list.style.maxHeight = "0px";
        } else {
            list.style.maxHeight = list.scrollHeight + "px";
        }
    }

    // Open modal and set context
    function openModal(type) {
        currentType = type;
        document.getElementById('modalTitle').innerText = `Add ${type === 'member' ? 'Member' : 'Tenancy'}`;
        document.getElementById('modalInput').value = '';
        document.getElementById('addModal').style.display = 'flex';
        document.getElementById('modalInput').focus();
    }

    // Close modal
    function closeModal() {
        document.getElementById('addModal').style.display = 'none';
    }

    // Submit input and append to the correct list
    function submitModal() {
        const value = document.getElementById('modalInput').value.trim();
        if (!value) return;

        // Find the correct <ul> based on currentType
        const listSelector = currentType === 'member'
            ? '.card:nth-of-type(1) ul'
            : '.card:nth-of-type(2) ul';

        const list = document.querySelector(listSelector);

        const li = document.createElement('li');
        li.textContent = value;
        list.appendChild(li);

        // Auto-expand if it was collapsed
        const header = list.previousElementSibling;
        if (!header.classList.contains('active')) {
            toggleAccordion(header);
        }

        closeModal();
    }
</script>