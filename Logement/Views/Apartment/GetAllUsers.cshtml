@model IEnumerable<Logement.ViewModels.AllUsersViewModel>

@{
    ViewData["Title"] = "GetAllUsers";
}
<link rel="stylesheet" href="~/css/style.css">

<style>
    .button {
        display: flex;
        justify-content: space-between;
    }

    .buttonChoose {
        display: grid;
        height: 35px;
        width: 80px;
        background-color: #445744;
        font-family: "Poppins", sans-serif;
        color: #ffffff;
        font-weight: 500;
        margin-right: 2px;
        text-decoration: none;
        border-radius: 10px;
        place-items: center;
    }

    .buttonDelete {
        display: grid;
        height: 35px;
        width: 75px;
        background-color: red;
        margin-right: 5px;
        font-family: "Poppins", sans-serif;
        color: #ffffff;
        font-weight: 500;
        text-decoration: none;
        border-radius: 10px;
        place-items: center;
    }

    .buttonChoose:hover  {
        background-color: #002ead;
        transition: 0.7s;
    }

    .buttonDelete:hover {
        background-color: #002ead;
        transition: 0.7s;
    }
</style>

<div class="body">
    <div class="table">
        <section class="table_header">
            <h1>Registered users</h1>
            <div class="input-group">
                 <input type="search" placeholder="Search Data...">
                 <img src="~/img/search.png" alt="" >
            </div>
        </section>
        <section class="table_body">
            <table>
                <thead>
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.TenantFullName)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.JobTitle)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.PhoneNumber)
                        </th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                <strong>@Html.DisplayFor(modelItem => item.TenantFullName)</strong>
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.JobTitle)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.PhoneNumber)
                            </td>
                            <td>
                                <div class="button">
                                    <a class="buttonChoose" href="/Tenant/AddAsTenant?cityId=@item.CityId&tenantId=@item.TenantId">Choose</a>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </section>
    </div>
</div>
   

<script>
    const search = document.querySelector('.input-group input'),
        table_rows = document.querySelectorAll('tbody tr'),
        table_headings = document.querySelectorAll('thead th');

    // 1. Searching for specific data of HTML table
    search.addEventListener('input', searchTable);

    function searchTable() {
        table_rows.forEach((row, i) => {
            let table_data = row.textContent.toLowerCase(),
                search_data = search.value.toLowerCase();

            row.classList.toggle('hide', table_data.indexOf(search_data) < 0);
            row.style.setProperty('--delay', i / 25 + 's');
        })

        document.querySelectorAll('tbody tr:not(.hide)').forEach((visible_row, i) => {
            visible_row.style.backgroundColor = (i % 2 == 0) ? 'transparent' : '#0000000b';
        });
    }
</script>